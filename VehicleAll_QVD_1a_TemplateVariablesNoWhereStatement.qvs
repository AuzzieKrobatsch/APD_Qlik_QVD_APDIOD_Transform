///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////Part 1 Variables //////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
////Report Details
Let vReportName = 'QVD - Vehicle All - GO';

////Report Description
Let vReportDescription = 'This application is only used to build a data source that closely matches the Discoverer Folder that shares the same name. ';

// Report owner
Let vReportOwner = 'APD Information Systems';

//Change History Log changes in this area to help people know what has changed
Let vReportChanges = '';

////QVD Details
////QVD Builder Variables
Let vDBFrom = 'APDIOD.VEHICLE_ALL_VW'; //Source Table $(vDBFrom)
// Where part (used in two places both the where statement but also passed into a column so it can be called as metadata on the qvd)
// Let vWHERE_PART = 'where rt= ''GO'''; //called as  $(WHERE_PART) also 
//take note this isn't the typical where statement we have use ' ' (escape character) when we want '
//to put those allow for the system to view the 'GO'
//Folder to place QVD in 
LET vFOLDER='lib://APD QVDs - BusinessTechnology/BusinessTechnology\QVDs\APDIOD\Transform'; //called as $(FOLDER)
//Name of QVD Note that the Folder is passed in the variable
// Where part (used in two places both the where statement but also passed into a column so it can be called as metadata on the qvd)
Let vQlikTable = 'Vehicle All'; //Qlik Table used for all the data moving forward $(vQlikTable)
LET vQVD='[$(vFOLDER)/$(vQlikTable).qvd]'; // called as $(QVD)LET MetadataPath = ‘$(vFOLDER)/Metadata/$(vQlikTable)_Metadata.qvd’;

LET MetadataPath = '$(vFOLDER)/Metadata/$(vQlikTable)_Metadata.qvd';
//We also will look for an existing Metadata QVD and if one is not found, we will create it.

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////PART 2 Meta data ///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
IF FileSize('$(MetadataPath)') > 0 THEN //  The Metadata QVD already exists.
ELSE // The Metadata QVD needs to be created

Metadata:
LOAD * INLINE [
     "Qlik Table Name"
    , "Source Table Name"
	, "Source Where Statement"
	, "QVD Location"
    , "Reloaded Date"
    , "Start Time"
    , "End Time"
	, "Source Row Count"
    , "QVD Row Count"  
    , "QVD Count of Fields"
    ];
	STORE Metadata INTO '$(MetadataPath)'(qvd);
	DROP TABLE Metadata
;
END IF  

sub Stats    
     LET vEndTime = NOW();
     LET vQVDRowCount = NoOfRows('$(vQlikTable)');
     LET vFields  = NoOfFields('$(vQlikTable)');
    
     Metadata:
     LOAD * FROM '$(MetadataPath)'(qvd); //   WHERE TableName <> ‘$(vQlikTable)’
     CONCATENATE (Metadata)
     LOAD DISTINCT 
	'$(vQlikTable)' as "Qlik Table Name"
    ,'$(vDBFrom)' as "Source Table Name"
    ,'$(vWHERE_PART)' as "Source Where Statement"
    ,'$(vQVD)' as "QVD Location"
    ,DATE(NOW()) AS "Reloaded Date"
    ,'$(vStartTime)' as "Start Time"
    ,'$(vEndTime)' as "End Time"
    ,'$(vDBRowCount)' as "Source Row Count"
    ,'$(vQVDRowCount)' as "QVD Row Count" 
    ,'$(vFields)' as "QVD Count of Fields"
     RESIDENT Metadata;
     STORE Metadata INTO $(MetadataPath)(qvd);
//     DROP TABLE Metadata;
	 
end sub 

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////PART 3 Mapping /////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////


FieldMap:
Mapping LOAD
    "Datawarehouse Source Column Name",
    "Qlik Field Name"
FROM [lib://APD QVDs - BusinessTechnology/BusinessTechnology/QVDs/APDIOD/Transform/Documentation/Vehicle All_Ready.xlsx]
(ooxml, embedded labels, table is Dimensions);

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////PART 4 Load File ///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
LIB CONNECT TO 'APD_CENTRALS';

LET vStartTime = NOW();


 '$(vQlikTable)':
 //Used to create filters/conditions in Discoverer
 load *
 ,If(IsNull([VEH STOLEN_VEHICLE Date Recovered]), 'Not Recovered', 'Recovered') as [Status of Recovery]
;
load *,
 Date(DATE_RECOVERED,'MM/DD/YYYY') as [VEH STOLEN_VEHICLE Date Recovered]
 ;
SELECT 
 "RIN",
"CORRECTED_DISTRICT",
"COUNTY",
"COUNTY_DESC",
"DATE_RECOVERED",
"DISTRICT",
"DOORS_LOCKED",
"GRID",
"IGNITION_LOCKED",
"KEYS_IN",
"LICENSE_NUM",
"MUNICIPALITY",
"RECOVERED_BY",
"RECOVERED_VALUE",
"RECOVERY_CASE_NO",
"RECOVERY_LOCATION",
"ROLE",
"SOI",
"STOLEN_LOCALLY",
"SV_REMARKS",
"SV_VEH_NUM",
"TIME_RECOVERED",
"VEH_COLOR",
"VEH_MODEL_DESC",
"VEH_ROLE_DESC",
"VEHICLE_STYLE_DESC",
"VIN",
"VN_EVENT_COUNT",
"VN_LICENSE_NUM",
"VN_VEH_COLOR",
"VN_VEH_MAKE",
// "VN_VEH_MAKE_DESC", //breaks
"VN_VEH_MODEL",
"VN_VEH_MODEL_DESC",
"VN_VEH_STYLE",
"VN_VEH_TYPE",
"VN_VEH_YEAR",
 "VN_VEHICLE_COLOR_DESC1", 
 "VN_VEHICLE_COLOR_DESC2", 
 "VN_VEHICLE_STYLE_DESC", 
"VN_YEAR_OF_ISSUE",
"X_COORDINATE",
"Y_COORDINATE",
"ZONE"

from
$(vDBFrom)
;

rename fields using FieldMap;
TAG FIELDS [VEH STOLEN_VEHICLE Date Recovered] with $date ;

Drop Field  DATE_RECOVERED;

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////PART 5  Stats for no where statement ///////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
LIB CONNECT TO 'APD_CENTRALS';

// this has become a need so that we know if the data has all been loaded or notCheck:
Check:
//counts the total rows that are in the table.
load 
ROWCOUNT
;
////Modify to identify the source table
select count(rownum) ROWCOUNT from $(vDBFrom)  // apdiod.VEHICLE_ALL_VW where rt= 'GO' $(WHERE_PART)
;
//passes that row count into a variable that can be compared.
let vDBRowCount = peek('ROWCOUNT')
;
call Stats;
//Moved to subroutine
All:
////Modify to identify the Table your loading
load * 
	,'$(vQlikTable)' as "Metadata Qlik Table Name"
    ,'$(vDBFrom)' as "Metadata Source Table Name"
    ,'$(vWHERE_PART)' as "Metadata Source Where Statement"
    ,'$(vQVD)' as "Metadata QVD Location"
    ,'$(vStartTime)' as "Metadata Start Time"
    ,'$(vDBRowCount)' as "Metadata Source Row Count"
    ,'$(vQVDRowCount)' as "Metadata QVD Row Count" 
    ,'$(vFields)' as "Metadata QVD Count of Fields" 
resident '$(vQlikTable)';
Drop table '$(vQlikTable)', Check ; 
store * 
from 
All into 
'$(vQVD)'
;